using Osmy.Server.Data.Settings;
using System.Diagnostics;

namespace Osmy.Server.Services
{
    internal class VulnerabilityScanService : BackgroundService
    {
        //private readonly IAppNotificationService _appNotificationService;

        public VulnerabilityScanService(/*IAppNotificationService appNotificationService*/)
        {
            //_appNotificationService = appNotificationService;
        }

        protected override Task ExecuteAsync(CancellationToken stoppingToken)
        {
            var autoScanTask = Task.Run(() => StartAutoScanRequest(stoppingToken), stoppingToken);
            return autoScanTask;
        }

        public static async Task ScanAsync(long sbomId, CancellationToken cancellationToken = default)
        {
            await VulnerabilityScanner.ScanAsync(sbomId, cancellationToken);
        }

        public static async Task ScanAsync(int sbomId, CancellationToken cancellationToken = default)
        {
            await VulnerabilityScanner.ScanAsync(sbomId, cancellationToken);
        }

        private static async Task StartAutoScanRequest(CancellationToken stoppingToken)
        {
            while (true)
            {
                try
                {
                    await VulnerabilityScanner.ScanAllAsync(stoppingToken);

                    var appNotificationService = new AppNotificationService();
                    appNotificationService.NotifyVulnerability();
                }
                catch (Exception)
                {
                    // TODO logging
                }

                await Task.Delay(Settings.General.VulnerabilityScanInterval, stoppingToken);
            }
        }
    }
}
